// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  name    String?
  address String
  phone   String
  userId  Int     @unique
  User    User    @relation(fields: [userId], references: [id])
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique 
  password String   
  Profile  Profile?
  Post     Post[]
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String?
  published    Boolean        @default(false)
  author       User           @relation(fields: [authorId], references: [id])
  authorId     Int
  PostCategory PostCategory[]
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String
  PostCategory PostCategory[]
}

model PostCategory {
  id         Int      @id @default(autoincrement())
  Post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@unique([postId, categoryId])
}
